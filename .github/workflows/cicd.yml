name: CICD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.6'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint code with flake8
      run: |
        pip install flake8
        flake8 . || echo "Lint warnings found"

    - name: Format check with black
      run: |
        pip install black
        black --check . || echo "Some files would be reformatted"

    - name: Type check with pyright
      uses: jakebailey/pyright-action@v1

    - name: Run tests
      run: |
        pytest || echo "No tests found, Skipping..."
    
    - name: Decode GCP service account key
      run: |
        echo "${{ secrets.GCP_SA_KEY_B64 }}" | base64 --decode > $HOME/gcloud-key.json
        cat $HOME/gcloud-key.json | head -n 5  # debug print

    - name: Authenticate with GCP manually
      run: |
        gcloud auth activate-service-account --key-file=$HOME/gcloud-key.json
        gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
        gcloud auth list

    - name: Debug Check gcloud account
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
        ls -la $GOOGLE_APPLICATION_CREDENTIALS
        cat $GOOGLE_APPLICATION_CREDENTIALS | head -n 5
        gcloud auth list
        gcloud config list

    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/collision-detection/collision-detection

    - name: Deploy on Cloud Run
      run: |
        gcloud run deploy collision-api \
          -- image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/cloud-run-source-deploy/collision-detection/collision-detection \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated
    

    - name: Debug Environment
      run: |
        gcloud auth list
        gcloud config list
        printenv | grep GOOGLE


        


