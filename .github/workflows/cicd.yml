name: CICD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.6'
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint code with flake8
      run: |
        pip install flake8
        flake8 . || echo "Lint warnings found"

    - name: Format check with black
      run: |
        pip install black
        black --check . || echo "Some files would be reformatted"

    - name: Type check with pyright
      uses: jakebailey/pyright-action@v1

    - name: Run tests
      run: |
        pytest || echo "No tests found, Skipping..."
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY_BASE64 }}
        credentials_format: 'base64'
        export_default_credentials: true
    
    - name: Debug Auth Check gcloud account
      run: |
        echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"
        ls -la $GOOGLE_APPLICATION_CREDENTIALS
        cat $GOOGLE_APPLICATION_CREDENTIALS | head -n 5
        gcloud auth list
        gcloud config list


    - name: Build and Push Docker Image
      run: |
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/coll-detect-docker

    - name: Deploy on Cloud Run
      run: |
        gcloud run deploy collision-api \
          -- image gcr.io/${{ secrets.GCP_PROJECT_ID }}/coll-detect-docker \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated
    
    - name: Debug Environment
      run: |
        gcloud auth list
        gcloud config list
        printenv | grep GOOGLE


        


